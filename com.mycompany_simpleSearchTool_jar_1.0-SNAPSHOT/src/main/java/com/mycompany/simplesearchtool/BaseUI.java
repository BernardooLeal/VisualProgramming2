/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.simplesearchtool;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;  
import java.util.List;  
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author bernardoleal
 */
public class BaseUI extends javax.swing.JFrame {

    private List<File> selectedFiles = new ArrayList<>();
    private String savedResult;
    private int wordCounter = 0;
    
    public BaseUI() {
        initComponents();
    }
   
    
    private void readFiles(File file) {
        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String text; 
            while ((text = reader.readLine()) != null){
                if (text.toLowerCase().contains(jtfInput.getText())) {
                    wordCounter++;
                    jtaResult.append("-----------------------------------\n");
                    jtaResult.append(text + "\n");
                }
               
            }
            jtaResult.append("-----------------------------------\n");
            jtaResult.append("The word appeared " + wordCounter +" times in the file\n");
            wordCounter = 0;
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Could not read file", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfcFile = new javax.swing.JFileChooser();
        jlblInput = new javax.swing.JLabel();
        jtfInput = new javax.swing.JTextField();
        jbtnImport = new javax.swing.JButton();
        jbtnClear = new javax.swing.JButton();
        jbtnSearch = new javax.swing.JButton();
        jbtnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaResult = new javax.swing.JTextArea();
        jbtnUnsave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlblInput.setText("What are you looking for:");

        jtfInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfInputActionPerformed(evt);
            }
        });

        jbtnImport.setText("Import Files");
        jbtnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportActionPerformed(evt);
            }
        });

        jbtnClear.setText("Clear Info");
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });

        jbtnSearch.setText("Search");
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });

        jbtnSave.setText("Save Info");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        jtaResult.setColumns(20);
        jtaResult.setRows(5);
        jScrollPane1.setViewportView(jtaResult);

        jbtnUnsave.setText("Unsave Info");
        jbtnUnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUnsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jbtnImport)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlblInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbtnSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnUnsave)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnImport)
                    .addComponent(jbtnClear)
                    .addComponent(jbtnSearch)
                    .addComponent(jbtnSave)
                    .addComponent(jbtnUnsave))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblInput)
                    .addComponent(jtfInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportActionPerformed
        // aq eh o import
        jfcFile.setMultiSelectionEnabled(true);
        int returnVal = jfcFile.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = jfcFile.getSelectedFiles();
            for (File file:files) {
                selectedFiles.add(file);
            }
           
            
        }
    }//GEN-LAST:event_jbtnImportActionPerformed

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        // TODO add your handling code here:
        jtaResult.setText("");
        if (savedResult != null) {
            jtaResult.setText(savedResult);
        }
        
    }//GEN-LAST:event_jbtnClearActionPerformed

    private void jtfInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfInputActionPerformed

    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchActionPerformed
        // TODO add your handling code here:
        if (!selectedFiles.isEmpty()){
            for (File file : selectedFiles) {
            jtaResult.append("Searching in file: " + file.getName() + "\n");
            readFiles(file);
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Please import a file first!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtnSearchActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        // TODO add your handling code here:
        savedResult = jtaResult.getText();
        
    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void jbtnUnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUnsaveActionPerformed
        // TODO add your handling code here:
        savedResult = null;
    }//GEN-LAST:event_jbtnUnsaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaseUI().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnImport;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JButton jbtnUnsave;
    private javax.swing.JFileChooser jfcFile;
    private javax.swing.JLabel jlblInput;
    private javax.swing.JTextArea jtaResult;
    private javax.swing.JTextField jtfInput;
    // End of variables declaration//GEN-END:variables
}
